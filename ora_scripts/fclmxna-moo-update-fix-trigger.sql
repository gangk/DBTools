-- booker.PPR_REPORT_LINEITEM_AGGS

CREATE OR REPLACE TRIGGER "BOOKER"."WID_PPR_REPORT_LINEITEM_AGGS"
BEFORE INSERT OR UPDATE
ON booker.PPR_REPORT_LINEITEM_AGGS
FOR EACH ROW
BEGIN
IF INSERTING THEN
   select WAREHOUSE_ID, START_DATE_UTC INTO :new.WAREHOUSE_ID, :new.START_DATE_UTC FROM BOOKER.PPR_REPORT_AGGS WHERE PPR_REPORT_ID=:new.PPR_REPORT_ID;
END IF;
IF UPDATING THEN
  IF (:new.WAREHOUSE_ID IS NULL) THEN
   select :old.WAREHOUSE_ID  INTO :new.WAREHOUSE_ID FROM dual;
  END IF;
  IF (:new.START_DATE_UTC IS NULL) THEN
   select :old.START_DATE_UTC  INTO :new.START_DATE_UTC FROM dual;
  END IF;
END IF;
EXCEPTION
 WHEN NO_DATA_FOUND THEN
  SELECT 'ZZZ9', '13-MAY-05' INTO :new.WAREHOUSE_ID, :new.START_DATE_UTC FROM dual;
 WHEN OTHERS THEN
  raise_application_error(-20505, 'wid_ppr_report_lineitem_aggs trigger failed. Rolling back.' || SQLERRM);
END;
/


-- booker.WORK_AREA_PROCESS_FUNCTIONS

CREATE OR REPLACE TRIGGER "BOOKER"."WORKAREA_PROCFUNC_WHIDS"
BEFORE INSERT OR UPDATE
ON booker.WORK_AREA_PROCESS_FUNCTIONS
FOR EACH ROW
BEGIN
IF INSERTING THEN
   select WAREHOUSE_ID INTO :new.WAREHOUSE_ID FROM BOOKER.WORK_AREAS WHERE WORK_AREA_ID=:new.work_area_id;
END IF;
IF UPDATING THEN
   IF (:new.WAREHOUSE_ID IS NULL) THEN
   select :old.WAREHOUSE_ID  INTO :new.WAREHOUSE_ID FROM dual;
   END IF;
END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    SELECT 'ZZZ9' INTO :new.WAREHOUSE_ID FROM dual;
    WHEN OTHERS THEN
     raise_application_error(-20505, 'workarea_procfunc_whids trigger failed. Rolling back.'  || SQLERRM);
END;
/

-- booker.DATA_PROC_RESOURCE_VERSIONS

CREATE OR REPLACE TRIGGER "BOOKER"."DATAPROC_RESCVER_WHIDS"
BEFORE INSERT OR UPDATE
ON booker.DATA_PROC_RESOURCE_VERSIONS
FOR EACH ROW
BEGIN
IF INSERTING THEN
   :new.WAREHOUSE_ID := SUBSTR(:new.resource_key, 1, 4);
END IF;
IF UPDATING THEN
   IF (:new.WAREHOUSE_ID IS NULL) THEN
   select :old.WAREHOUSE_ID  INTO :new.WAREHOUSE_ID FROM dual;
   END IF;
END IF;
EXCEPTION
    WHEN OTHERS THEN
     -- raise error if we cannot set the warehouse_id
     raise_application_error(-20505, 'dataproc_rescver_whids trigger failed. Rolling back.'  || SQLERRM);
END;
/

-- booker.DATA_PROC_RESOURCE_TIMESTAMPS

CREATE OR REPLACE TRIGGER "BOOKER"."DATAPROC_RESCTIME_WHIDS"
BEFORE INSERT OR UPDATE
ON booker.DATA_PROC_RESOURCE_TIMESTAMPS
FOR EACH ROW
BEGIN
IF INSERTING THEN
 :new.WAREHOUSE_ID := (CASE :new.RESOURCE_CLASS WHEN 'amazon.fclm.processlabor.dataprocessing.support.UpdatableTimestampResourceWrapper' THEN substr(:new.resource_key, instr(:new.resource_key, '-')+1, 4) ELSE substr(:new.resource_key, 0, 4) END);
END IF;
IF UPDATING THEN
   IF (:new.WAREHOUSE_ID IS NULL) THEN
   select :old.WAREHOUSE_ID  INTO :new.WAREHOUSE_ID FROM dual;
   END IF;
END IF;
EXCEPTION
    WHEN OTHERS THEN
     -- raise error if we cannot set the warehouse_id
     raise_application_error(-20505, 'dataproc_resctime_whids trigger failed. Rolling back.'  || SQLERRM);
END;
/
